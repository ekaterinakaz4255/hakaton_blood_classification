import streamlit as st
import sqlalchemy
import datetime
import pandas as pd
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="SharkLab Assistant", page_icon="ü¶à", layout="wide")

# db conn
#conn = st.connection('gbd', type='sql')
sql_engine = sqlalchemy.create_engine('sqlite:///gbd.db', echo=False)
conn = sql_engine.raw_connection()

# CSS-—Å—Ç–∏–ª–∏ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
st.markdown(
    """
    <style>
    .info-box {
        background-color: #ffffff;
        border: 1px solid #A4D7F7;
        padding: 20px 10px;
        border-radius: 10px;
        font-size: 14px;
        color: #15aabf;
        position: absolute; 
        left: 40%;
        margin-top: -20%;  
        transform: translateX(0%);
    }
    .stButton>button {
                background-color: #0c8599; /* —Ü–≤–µ—Ç –∫–Ω–æ–ø–∫–∏ */
                color: #a5a5a5; /* —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ */
                padding: 20px 170px; /* —Ä–∞–∑–º–µ—Ä –∫–Ω–æ–ø–∫–∏ */
                font-size: 30px; /* —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–∞ */
                border-radius: 10px; /* –∑–∞–∫—Ä—É–≥–ª–µ–Ω–∏–µ —É–≥–ª–æ–≤ */
            }
    }
    .stImage>image {
                    position: absolute;
                    right: 50px;
                    top: 50%;
                    transform: translateY(-70%);
    }
    </style>
    """,
    unsafe_allow_html=True,
)
#–ê–∫—É–ª–∞ —Å –∏–Ω—Ñ–æ –±–ª–æ–∫–æ–º + –∏–Ω—Ñ–∞ –ø—Ä–æ *
col1, col2 = st.columns(2, vertical_alignment="center")
#–¢–µ–∫—Å—Ç
with col1:
    st.markdown(
            """
            <div class="info-box">
            <p>–¢–æ–≥–¥–∞ –∑–∞–ø–æ–ª–Ω–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ª—è —Å –ø–æ–∫–∞–∑–∞—Ç–µ–ª—è–º–∏ –∏–∑ —Å–≤–æ–µ–≥–æ –±–ª–∞–Ω–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –û–ê–ö (–æ–±—â–µ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–æ–≤–∏).</p>
            <p>–ü–æ–ª—è, –æ—Ç–º–µ—á–µ–Ω–Ω—ã–µ –∑–≤–µ–∑–¥–æ—á–∫–æ–π, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.</p>
            </div>
            """,
            unsafe_allow_html=True,
        )
    #–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
with col2:
    st.image("images/sticker.png", width=300, use_container_width=False)
# –î–≤–µ –∫–æ–ª–æ–Ω–∫–∏: —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∞, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–µ–≤–∞
with st.form(key='gbd'):
    #–ë–ª–æ–∫ –ª–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    st.markdown(
        """
        <div class="personal-info">
        <style>.personal-info {
            background-color: #ffffff;
            padding: 20px 10px;
            font-size: 14px;
            color: #15aabf;
            text-align: center
        }</style>
        <h2> –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è </h2>
        </div>
        """,
        unsafe_allow_html=True,
    )
    col1, col2 = st.columns([1, 1])
    
    #–§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ –ø–æ–ª–∞ –∏ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    with col1:
        gender = st.selectbox("–ü–æ–ª: *", ["–ú—É–∂—Å–∫–æ–∏ÃÜ", "–ñ–µ–Ω—Å–∫–∏–π"])
        date_of_birth = st.date_input("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: *", value=None, min_value=datetime.date(1900, 1, 1), max_value=datetime.date.today())

    #–§–æ—Ä–º–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ä–æ—Å—Ç–∞ –∏ –≤–µ—Å–∞
    with col2:
        height = st.number_input("–†–æ—Å—Ç (—Å–º):", value=None, min_value=0, max_value=250)
        weight = st.number_input("–í–µ—Å (–∫–≥):", value=None, min_value=0, max_value=300)

    #–ë–ª–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –û–ê–ö
    st.markdown(
        """
        <div class="personal-info">
        <style>.personal-info {
            background-color: #ffffff;
            padding: 20px 10px;
            font-size: 14px;
            color: #15aabf;
            text-align: center
        }</style>
        <h2> –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –û–ê–ö </h2>
        </div>
        """,
        unsafe_allow_html=True,
    )

    #–§–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –û–ê–ö –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ
    st.markdown(
        """
        <div class="personal-info">
        <style>.personal-info {
            background-color: #ffffff;
            padding: 20px 10px;
            font-size: 14px;
            color: #15aabf;
            text-align: left
        }</style>
        <h3> –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã </h3>
        </div>
        """,
        unsafe_allow_html=True,
    )
    col3, col4, col5 = st.columns([1, 1, 1])
    with col3:
        wbs = st.number_input("–õ–µ–π–∫–æ—Ü–∏—Ç—ã (WBC): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        rbs = st.number_input("–≠—Ä–∏—Ç—Ä–æ—Ü–∏—Ç—ã (RBC): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        plt = st.number_input("–¢—Ä–º–±–æ—Ü–∏—Ç—ã (PLT): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        hct = st.number_input("–ì–µ–º–∞—Ç–æ–∫—Ä–∏—Ç (HCT): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        hgb = st.number_input("–ì–µ–º–æ–≥–ª–æ–±–∏–Ω (HGB): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f") 
   
    with col4:
        mcv = st.number_input("–°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–∞ (MCV): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        mch = st.number_input("–°—Ä–µ–¥–Ω–µ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≥–µ–º–æ–≥–ª–æ–±–∏–Ω–∞ –≤ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–µ (MCH): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        mchc = st.number_input("–£—Ä–æ–≤–µ–Ω—å –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏ –≥–µ–º–æ–º–æ–≥–ª–æ–±–∏–Ω–∞ –≤ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–∞—Ö (MCHC): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")

    with col5:
        ly_abs = st.number_input("–õ–∏–º—Ñ–æ—Ü–∏—Ç—ã # (LY#): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        mo_abs = st.number_input("–ú–æ–Ω–æ—Ü–∏—Ç—ã # (MO#): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        ne_abs = st.number_input("–ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã # (NE#): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        eo_abs = st.number_input("–≠–æ–∑–∏–Ω–æ—Ñ–∏–ª—ã # (EO#): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        ba_abs = st.number_input("–ë–∞–∑–æ—Ñ–∏–ª—ã # (BA#): *", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")


    #–ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    st.markdown(
        """
        <div class="personal-info">
        <style>.personal-info {
            background-color: #ffffff;
            padding: 20px 10px;
            font-size: 14px;
            color: #15aabf;
            text-align: left
        }</style>
        <h3> –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã </h3>
        </div>
        """,
        unsafe_allow_html=True,
    )
    col6, col7, col8= st.columns([1, 1, 1])
    with col6:
        pct = st.number_input("–¢—Ä–æ–º–±–æ–∫—Ä–∏—Ç (PCT):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        mpv = st.number_input("–°—Ä–µ–¥–Ω–∏–π –æ–±—ä–µ–º —Ç—Ä–æ–º–±–æ—Ü–∏—Ç–∞ (MPV):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        pdw = st.number_input("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–æ–º–±–æ—Ü–∏—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É (PDW):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        rdw = st.number_input("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É (RDW):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
   
    with col7:
        rdw_sd = st.number_input("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É, —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (RDW-SD):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        rdw_cv = st.number_input("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —ç—Ä–∏—Ç—Ä–æ—Ü–∏—Ç–æ–≤ –ø–æ –æ–±—ä–µ–º—É, –∫–æ–µ—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –≤–∞—Ä–∏–∞—Ü–∏–∏ (RDW-CV):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        color_index = st.number_input("–¶–≤–µ—Ç–æ–≤–æ–π –∏–Ω–¥–µ–∫—Å (CI):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        esr_westergen = st.number_input("–°–û–≠:", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
    
    with col8:
        ly_rel = st.number_input("–õ–∏–º—Ñ–æ—Ü–∏—Ç—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ % (LY%):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        mo_rel = st.number_input("–ú–æ–Ω–æ—Ü–∏—Ç—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ % (MO%):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        ne_rel = st.number_input("–ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ % (NE%):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        eo_rel = st.number_input("–≠–æ–∑–∏–Ω–æ—Ñ–∏–ª—ã, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ % (EO%):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        ba_rel = st.number_input("–ë–∞–∑–æ—Ñ–∏–ª—ã., –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ % (BA%):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")

#–õ–µ–π–∫–æ—Ü–∏—Ç–∞—Ä–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞
    st.markdown(
        """
        <div class="personal-info">
        <style>.personal-info {
            background-color: #ffffff;
            padding: 20px 10px;
            font-size: 14px;
                    color: #15aabf;
            text-align: center
        }</style>
        <h3> –õ–µ–π–∫–æ—Ü–∏—Ç–∞—Ä–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞ </h3>
        </div>
        """,
        unsafe_allow_html=True,
    )

    #–§–æ—Ä–º—ã –¥–ª—è –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ª–µ–π–∫–æ—Ü–∏—Ç–∞—Ä–Ω–æ–π —Ñ–æ—Ä–º—É–ª—ã
    col9, col10, col11 = st.columns([1, 1, 1])
    with col9:
        st.number_input("–õ–∏–º—Ñ–æ—Ü–∏—Ç—ã # (LY#):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        st.number_input("–ú–æ–Ω–æ—Ü–∏—Ç—ã # (MO#):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")

    with col10:
        st.number_input("–ù–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã # (NE#):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        st.number_input("–ü–∞–ª–æ—á–∫–æ—è–¥–µ—Ä–Ω—ã–µ –Ω–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã:", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        st.number_input("–°–µ–≥–º–µ–Ω—Ç–æ—è–¥–µ—Ä–Ω—ã–µ –Ω–µ–π—Ç—Ä–æ—Ñ–∏–ª—ã:", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
    
    with col11:
        st.number_input("–≠–æ–∑–∏–Ω–æ—Ñ–∏–ª—ã # (EO#):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")
        st.number_input("–ë–∞–∑–æ—Ñ–∏–ª—ã # (BA#):", value=None, min_value=0.0, max_value=1000.0, step=0.1, format="%.1f")

#–ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    st.write("")
    st.write("")
    st.write("")    
    col12, col13, col14 = st.columns([1, 1, 1])

    with col13:
        if st.form_submit_button(label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å"):
            required_fields = [
                gender, date_of_birth, height, weight, mcv, mch, mchc,
                ly_abs, mo_abs, ne_abs, eo_abs, ba_abs
                ]
            if any(field is None for field in required_fields):
                st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!")
            else:
                df = pd.DataFrame([required_fields], columns=['gender', 'date_of_birth', 'height', 'weight', 'mcv', 'mch', 'mchc',
                'ly_abs', 'mo_abs', 'ne_abs', 'eo_abs', 'ba_abs'])
                df.to_sql("gbd_ng", conn, if_exists="append", index=False)
                st.success("–§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!")
                time.sleep(5)
                st.switch_page("pages/3_result.py")


#–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤ csv-—Ñ–∞–∏ÃÜ–ª
